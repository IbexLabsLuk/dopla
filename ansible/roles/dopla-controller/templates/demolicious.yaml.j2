apiVersion: v1
kind: Namespace
metadata:
  name: dopla-demolicious
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: demolicious-pvc
  namespace: dopla-demolicious
  labels:
    app: demolicious
spec:
  accessModes:
  - ReadWriteOnce
  dataSource: null
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: demolicious-pv
  namespace: dopla-demolicious
  labels:
    app: demolicious
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: ""
  volumeMode: Filesystem
  volumeName: demolicious
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: demolicious
  name: demolicious-app
  namespace: dopla-demolicious
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: demolicious
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: demolicious
    spec:
      containers:
      - env:
        - name: HELLO_NAME
          value: Lukas
        image: nginx
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /bin/true
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 2
        name: demolicious-nginx
        readinessProbe:
          exec:
            command:
            - /bin/true
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 2
          timeoutSeconds: 2
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /demolicious-pv
          name: demolicious-pv
        - mountPath: /demolicious-pvc
          name: demolicious-pvc
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: demolicious-pv
        persistentVolumeClaim:
          claimName: demolicious-pv
      - name: demolicious-pvc
        persistentVolumeClaim:
          claimName: demolicious-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: demolicious
  name: demolicious-webserver
  namespace: dopla-demolicious
spec:
  ports:
  - name: default
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: demolicious
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-issuer
    kubernetes.io/tls-acme: "true"
  generation: 2
  labels:
    app: demolicious
  name: demolicious-site
  namespace: dopla-demolicious
spec:
  rules:
  - host: demolicious.{{dopla_domain}}
    http:
      paths:
      - backend:
          serviceName: demolicious-webserver
          servicePort: 80
        path: /
  tls:
  - hosts:
    - demolicious.{{dopla_domain}}
    secretName: demolicious-crt
